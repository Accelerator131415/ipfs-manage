package application.blockChain;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.3.0.
 */
public class Table extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_GETNODESTABLEYU = "getNodestableYu";

    public static final String FUNC_GETONLINETABLE = "getOnlinetable";

    public static final String FUNC_GETNODEFILETABLE = "getNodefiletable";

    public static final String FUNC_GETNODESBACKUPTABLE = "getNodesbackuptable";

    public static final String FUNC_GETMAINNODETABLE = "getMainnodetable";

    public static final String FUNC_GETNAMEHASHTABLE = "getNamehashtable";

    public static final String FUNC_GETNODESTABLEYU_MAIN = "getNodestableYu_main";

    public static final String FUNC_UPDATENODEFILETABLE = "updateNodefiletable";

    public static final String FUNC_UPDATENODESTABLEYU_MAIN = "updateNodestableYu_main";

    public static final String FUNC_UPDATENODESTABLELIMIT = "updateNodestableLimit";

    public static final String FUNC_UPDATEMAINNODETABLE = "updateMainnodetable";

    public static final String FUNC_UPDATENODESTABLEYU = "updateNodestableYu";

    public static final String FUNC_UPDATENAMEHASHTABLE = "updateNamehashtable";

    public static final String FUNC_UPDATENODESBACKUPTABLE = "updateNodesbackuptable";

    public static final String FUNC_GETNODESTABLELIMIT = "getNodestableLimit";

    public static final String FUNC_UPDATEONLINETABLE = "updateOnlinetable";

    @Deprecated
    protected Table(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Table(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Table(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Table(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<BigInteger> getNodestableYu() {
        final Function function = new Function(FUNC_GETNODESTABLEYU, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> getOnlinetable() {
        final Function function = new Function(FUNC_GETONLINETABLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getNodefiletable(String ip) {
        final Function function = new Function(FUNC_GETNODEFILETABLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ip)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getNodesbackuptable(String filename) {
        final Function function = new Function(FUNC_GETNODESBACKUPTABLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(filename)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getMainnodetable() {
        final Function function = new Function(FUNC_GETMAINNODETABLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getNamehashtable() {
        final Function function = new Function(FUNC_GETNAMEHASHTABLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getNodestableYu_main() {
        final Function function = new Function(FUNC_GETNODESTABLEYU_MAIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> updateNodefiletable(String ip, String _hash) {
        final Function function = new Function(
                FUNC_UPDATENODEFILETABLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ip), 
                new org.web3j.abi.datatypes.Utf8String(_hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateNodestableYu_main(BigInteger _yumain) {
        final Function function = new Function(
                FUNC_UPDATENODESTABLEYU_MAIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_yumain)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateNodestableLimit(BigInteger _limit) {
        final Function function = new Function(
                FUNC_UPDATENODESTABLELIMIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_limit)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateMainnodetable(String hash) {
        final Function function = new Function(
                FUNC_UPDATEMAINNODETABLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateNodestableYu(BigInteger _yu) {
        final Function function = new Function(
                FUNC_UPDATENODESTABLEYU, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_yu)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateNamehashtable(String hash) {
        final Function function = new Function(
                FUNC_UPDATENAMEHASHTABLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateNodesbackuptable(String filename, String _hash) {
        final Function function = new Function(
                FUNC_UPDATENODESBACKUPTABLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(filename), 
                new org.web3j.abi.datatypes.Utf8String(_hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getNodestableLimit() {
        final Function function = new Function(FUNC_GETNODESTABLELIMIT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> updateOnlinetable(String hash) {
        final Function function = new Function(
                FUNC_UPDATEONLINETABLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Table load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Table(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Table load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Table(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Table load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Table(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Table load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Table(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Table> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Table.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Table> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Table.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Table> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Table.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Table> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Table.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
